<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.panxia.code.mappers.PayMentMapper">
  <resultMap id="BaseResultMap" type="com.panxia.code.PayMent">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="partner_Id" jdbcType="VARCHAR" property="partnerId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="mer_id" jdbcType="VARCHAR" property="merId" />
    <result column="channel_id" jdbcType="VARCHAR" property="channelId" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="total_fee" jdbcType="DECIMAL" property="totalFee" />
    <result column="outTradeNo" jdbcType="VARCHAR" property="outtradeno" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="budget_code" jdbcType="VARCHAR" property="budgetCode" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="userTrueName" jdbcType="VARCHAR" property="usertruename" />
    <result column="userCreId" jdbcType="VARCHAR" property="usercreid" />
    <result column="sign" jdbcType="VARCHAR" property="sign" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="apply_id" jdbcType="VARCHAR" property="applyId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, partner_Id, user_id, mer_id, channel_id, open_id, total_fee, outTradeNo, product_name, 
    budget_code, mobile, userTrueName, userCreId, sign, pay_time, create_time, state, 
    apply_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from payment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from payment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.panxia.code.PayMent">
    insert into payment (id, partner_Id, user_id, 
      mer_id, channel_id, open_id, 
      total_fee, outTradeNo, product_name, 
      budget_code, mobile, userTrueName, 
      userCreId, sign, pay_time, 
      create_time, state, apply_id
      )
    values (#{id,jdbcType=INTEGER}, #{partnerId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{merId,jdbcType=VARCHAR}, #{channelId,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, 
      #{totalFee,jdbcType=DECIMAL}, #{outtradeno,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, 
      #{budgetCode,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{usertruename,jdbcType=VARCHAR}, 
      #{usercreid,jdbcType=VARCHAR}, #{sign,jdbcType=VARCHAR}, #{payTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, #{applyId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.panxia.code.PayMent">
    insert into payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="partnerId != null">
        partner_Id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="merId != null">
        mer_id,
      </if>
      <if test="channelId != null">
        channel_id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="totalFee != null">
        total_fee,
      </if>
      <if test="outtradeno != null">
        outTradeNo,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="budgetCode != null">
        budget_code,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="usertruename != null">
        userTrueName,
      </if>
      <if test="usercreid != null">
        userCreId,
      </if>
      <if test="sign != null">
        sign,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="applyId != null">
        apply_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="partnerId != null">
        #{partnerId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="merId != null">
        #{merId,jdbcType=VARCHAR},
      </if>
      <if test="channelId != null">
        #{channelId,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null">
        #{totalFee,jdbcType=DECIMAL},
      </if>
      <if test="outtradeno != null">
        #{outtradeno,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="budgetCode != null">
        #{budgetCode,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="usertruename != null">
        #{usertruename,jdbcType=VARCHAR},
      </if>
      <if test="usercreid != null">
        #{usercreid,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="applyId != null">
        #{applyId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.panxia.code.PayMent">
    update payment
    <set>
      <if test="partnerId != null">
        partner_Id = #{partnerId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="merId != null">
        mer_id = #{merId,jdbcType=VARCHAR},
      </if>
      <if test="channelId != null">
        channel_id = #{channelId,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null">
        total_fee = #{totalFee,jdbcType=DECIMAL},
      </if>
      <if test="outtradeno != null">
        outTradeNo = #{outtradeno,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="budgetCode != null">
        budget_code = #{budgetCode,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="usertruename != null">
        userTrueName = #{usertruename,jdbcType=VARCHAR},
      </if>
      <if test="usercreid != null">
        userCreId = #{usercreid,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="applyId != null">
        apply_id = #{applyId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.panxia.code.PayMent">
    update payment
    set partner_Id = #{partnerId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      mer_id = #{merId,jdbcType=VARCHAR},
      channel_id = #{channelId,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      total_fee = #{totalFee,jdbcType=DECIMAL},
      outTradeNo = #{outtradeno,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      budget_code = #{budgetCode,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      userTrueName = #{usertruename,jdbcType=VARCHAR},
      userCreId = #{usercreid,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      apply_id = #{applyId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>